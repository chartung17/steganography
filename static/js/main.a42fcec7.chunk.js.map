{"version":3,"sources":["Output.js","TextInput.js","FileInput.js","App.js","reportWebVitals.js","index.js"],"names":["Output","props","state","text","prevProps","this","setState","className","startsWith","href","React","Component","TextInput","handleChange","bind","e","target","value","handleValChange","rows","name","onChange","App","imagefile","display","success","hide","hidefile","read","handleFileInputChange","handleTextInputChange","input","str","encodeURIComponent","requestOptions","method","headers","body","JSON","stringify","textfile","fetch","then","res","json","err","console","log","result","undefined","id","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a42fcec7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Output extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: props.text\r\n    }\r\n    // this.handleTextChange = this.handleTextChange.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props === prevProps) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      text: this.props.text\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let text = 'The file containing your hidden message can be found at ';\r\n    return (\r\n      <div className='output'>\r\n        {this.state.text.startsWith('http')\r\n          ? <p>{text}<a href={this.state.text}>{this.state.text}</a></p>\r\n          : <p>{this.state.text}</p>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class TextInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: ''\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  // handle change in state\r\n  handleChange(e) {\r\n    this.setState({\r\n      text: e.target.value\r\n    });\r\n    this.props.handleValChange(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='input'>\r\n      <textarea rows=\"10\" name='text-input' value={this.state.text} onChange={this.handleChange}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class TextInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: ''\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  // handle change in state\r\n  handleChange(e) {\r\n    this.setState({\r\n      text: e.target.value\r\n    });\r\n    this.props.handleValChange(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='input'>\r\n      <input name='file-input' value={this.state.text} onChange={this.handleChange}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport Output from './Output';\nimport TextInput from './TextInput';\nimport FileInput from './FileInput';\nimport './App.css';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      imagefile: '',\n      display: '',\n      success: false\n    }\n    this.hide = this.hide.bind(this);\n    this.hidefile = this.hidefile.bind(this);\n    this.read = this.read.bind(this);\n    this.handleFileInputChange = this.handleFileInputChange.bind(this);\n    this.handleTextInputChange = this.handleTextInputChange.bind(this);\n  }\n\n  handleFileInputChange(input) {\n    this.setState({\n      imagefile: input\n    })\n  }\n\n  handleTextInputChange(input) {\n    this.setState({\n      text: input\n    })\n  }\n\n  encode(str) {\n    return encodeURIComponent(str);\n  }\n\n  hide() {\n    this.setState({\n      display: 'Loading...'\n    });\n    let requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        imagefile: this.state.imagefile,\n        text: this.state.text,\n        textfile: \"none\"\n      })\n    };\n    fetch(\"https://chartung17-steganography.herokuapp.com/hide\", requestOptions)\n    .then(res => {\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(result => {\n      let text = '';\n      let success = false;\n      if (result === undefined) {\n        text = 'Unknown error occured'\n      } else {\n        success = result['status'] === 200;\n        text = success ? result['link'] : result['message'];\n      }\n      this.setState({\n        display: text,\n        success: success\n      });\n    });\n  }\n\n  hidefile() {\n    this.setState({\n      display: 'Loading...'\n    });\n    let requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        imagefile: this.state.imagefile,\n        text: '',\n        textfile: this.state.text\n      })\n    };\n    fetch(\"https://chartung17-steganography.herokuapp.com/hide\", requestOptions)\n    .then(res => {\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(result => {\n      let text = '';\n      let success = false;\n      if (result === undefined) {\n        text = 'Unknown error occured'\n      } else {\n        success = result['status'] === 200;\n        text = success ? result['link'] : result['message'];\n      }\n      this.setState({\n        display: text,\n        success: success\n      });\n    });\n  }\n\n  read() {\n    this.setState({\n      display: 'Loading...'\n    });\n    let requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        imagefile: this.state.imagefile,\n        text: '',\n        textfile: \"none\"\n      })\n    };\n    fetch(\"https://chartung17-steganography.herokuapp.com/read\", requestOptions)\n    .then(res => {\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(result => {\n      let text = '';\n      let success = false;\n      if (result === undefined) {\n        text = 'Unknown error occured'\n      } else {\n        success = result['status'] === 200;\n        text = result['message'];\n        if (success) text = 'Hidden message: ' + text;\n      }\n      this.setState({\n        display: text,\n        success: success\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n      <header className=\"App-header\">\n      <br/><br/>\n      <h1>Steganography</h1>\n      <p id='top'>Enter the URL of an image file:</p>\n      <FileInput id='imagefile' handleValChange={this.handleFileInputChange}/>\n      <p>To hide text, enter the text below. To hide the contents of a text file, enter the file URL.\n      To read the hidden message in a file, leave this field blank.</p>\n      <TextInput id='text' handleValChange={this.handleTextInputChange}/>\n      <br/>\n      <div>\n        <button id='hide' onClick={this.hide}>Hide Text</button>\n        <button id='hidefile' onClick={this.hidefile}>Hide Text From File</button>\n        <button id='read' onClick={this.read}>Read Hidden Message</button>\n      </div>\n      <Output text={this.state.display}/>\n      </header>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}